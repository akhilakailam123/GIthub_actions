name: Password Update Workflow
on:
  workflow_dispatch:
    inputs:
      user_passwords:
        description: 'Enter passwords for users in JSON format'
        required: true
      environment:
        description: 'Select environment (prod/int)'
        required: true
        default: 'int'
        options:
          - prod
          - int
permissions:
  contents: write

jobs:
  update-password:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get install jq -y

      - name: Parse and validate JSON Input
        run: |
          # Store the JSON input in a variable
          passwords_json='${{ github.event.inputs.user_passwords }}'
          
          # Output the JSON input for debugging
          echo "Input JSON: $passwords_json"
          
          # Disable shell exit on error temporarily
          set +e
          
          # Validate the JSON input using jq
          validation_output=$(echo "$passwords_json" | jq . 2>&1)  # Capture both stdout and stderr
          jq_exit_code=$?  # Store jq exit code
          
          # Re-enable exit on error
          set -e
          
          # Check if jq command failed
          if [ $jq_exit_code -ne 0 ]; then
            echo "Invalid JSON input provided. Error details:"
            echo "$validation_output"  # Print the error message from jq directly
            exit 1  # Exit with an error
          else
            echo "JSON is valid."
          fi
      
          # Optional: Display the saved valid JSON
          echo "Passwords JSON:"
          echo "$passwords_json" > passwords.json
          cat passwords.json

      - name: Run password update script
        run: |
          # Run the password update script after validation
          chmod +x update_passwords.sh
          ./update_passwords.sh "${{ github.event.inputs.environment }}" passwords.json

      - name: Commit changes to SCM
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Updated passwords in ${{ github.event.inputs.environment }} environment" || echo "No changes to commit"
          git pull --rebase origin master
          git push origin master
