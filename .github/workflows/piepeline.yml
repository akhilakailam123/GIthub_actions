name: Password update Test Workflow
 
on:
  workflow_dispatch:
    inputs:
      user_name:
        description: 'Enter username'
        required: true
      environment:
        description: 'Select environment (prod/INT)'
        required: true
        default: 'INT'
        options:
          - prod
          - INT

jobs:
  update-password:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Display Inputs
        run: |
          echo "Username: ${{ github.event.inputs.user_name }}"
          echo "Environment: ${{ github.event.inputs.environment }}"

      - name: Simulate Password Encryption
        id: encrypt_password
        run: |
          echo "Simulating password encryption for ${{ github.event.inputs.user_name }}..."
          encrypted_password=$(echo "password" | openssl enc -aes-256-cbc -a -salt -pass pass:mysecretpass)
          echo "encrypted_password=$encrypted_password" >> $GITHUB_OUTPUT
        shell: bash
        
      - name: Simulate Updating Password for Clusters
        run: |
          echo "Updating password for ${{ github.event.inputs.user_name }} in ${{ github.event.inputs.environment }} environment..."
          echo "Simulated update for all clusters using ${{ github.event.inputs.user_name }}"

      - name: Create or Update XML Files for Clusters
        run: |
          clusters=("cluster1" "cluster2" "cluster3")
          for cluster in "${clusters[@]}"; do
            xml_file="./${{ github.event.inputs.environment }}/$cluster.xml"
            echo "Creating/Updating $xml_file"
      
            # Use the cat with heredoc inside the run block
            cat <<EOL > "$xml_file"
      <cluster>
        <name>$cluster</name>
        <username>${{ github.event.inputs.user_name }}</username>
        <encrypted_password>${{ steps.encrypt_password.outputs.encrypted_password }}</encrypted_password>
      </cluster>
      EOL
          done

      - name: Commit changes to SCM (Simulation)
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git diff --exit-code || (
                git add .
                git commit -m "Update password for ${{ github.event.inputs.user_name }}"
              )

          if [ $(git rev-parse HEAD) != $(git rev-parse @{u}) ]; then
            git push origin ${{ github.event.inputs.environment }}
          else
            echo "No changes to push."
          fi
